{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "import re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RK</th>\n",
       "      <th>PLAYER</th>\n",
       "      <th>TEAM</th>\n",
       "      <th>ERA</th>\n",
       "      <th>CG</th>\n",
       "      <th>SHO</th>\n",
       "      <th>TBF</th>\n",
       "      <th>GF</th>\n",
       "      <th>SVO</th>\n",
       "      <th>SH</th>\n",
       "      <th>SF</th>\n",
       "      <th>HBP</th>\n",
       "      <th>GDP</th>\n",
       "      <th>WP</th>\n",
       "      <th>BK</th>\n",
       "      <th>QS</th>\n",
       "      <th>QS%</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Ian Kinsler</td>\n",
       "      <td>SD</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td>Russell Martin</td>\n",
       "      <td>LAD</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td>Ben Zobrist</td>\n",
       "      <td>CHC</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td></td>\n",
       "      <td>Sean Rodriguez</td>\n",
       "      <td>PHI</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td></td>\n",
       "      <td>Tommy Hunter</td>\n",
       "      <td>PHI</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>195</td>\n",
       "      <td>196</td>\n",
       "      <td>Jeff Samardzija</td>\n",
       "      <td>SF</td>\n",
       "      <td>3.52</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>740</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>0.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>196</td>\n",
       "      <td>197</td>\n",
       "      <td>Nick Goody</td>\n",
       "      <td>CLE</td>\n",
       "      <td>3.54</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>173</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>197</td>\n",
       "      <td></td>\n",
       "      <td>Kyle Ryan</td>\n",
       "      <td>CHC</td>\n",
       "      <td>3.54</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>260</td>\n",
       "      <td>12</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>198</td>\n",
       "      <td>199</td>\n",
       "      <td>Junior Guerra</td>\n",
       "      <td>MIL</td>\n",
       "      <td>3.55</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>344</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>199</td>\n",
       "      <td>200</td>\n",
       "      <td>Zach Davies</td>\n",
       "      <td>MIL</td>\n",
       "      <td>3.55</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>672</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0.26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>200 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      RK           PLAYER TEAM   ERA CG SHO  TBF  GF SVO SH SF HBP GDP WP BK  \\\n",
       "0      1      Ian Kinsler   SD  0.00  0   0    6   1   0  0  0   1   1  0  0   \n",
       "1          Russell Martin  LAD  0.00  0   0   13   4   0  0  0   0   1  0  0   \n",
       "2             Ben Zobrist  CHC  0.00  0   0    5   0   0  0  0   0   0  0  0   \n",
       "3          Sean Rodriguez  PHI  0.00  0   0    4   2   0  0  0   0   0  0  0   \n",
       "4            Tommy Hunter  PHI  0.00  0   0   18   1   0  0  0   0   0  0  0   \n",
       "..   ...              ...  ...   ... ..  ..  ...  ..  .. .. ..  ..  .. .. ..   \n",
       "195  196  Jeff Samardzija   SF  3.52  0   0  740   0   0  4  4   6  11  5  0   \n",
       "196  197       Nick Goody  CLE  3.54  0   0  173   6   0  0  2   0   1  0  0   \n",
       "197             Kyle Ryan  CHC  3.54  0   0  260  12   2  0  3   1   7  1  0   \n",
       "198  199    Junior Guerra  MIL  3.55  0   0  344  11  11  3  2   4   5  5  0   \n",
       "199  200      Zach Davies  MIL  3.55  0   0  672   0   0  7  5   2  14  4  0   \n",
       "\n",
       "     QS   QS%  \n",
       "0     0  0.00  \n",
       "1     0  0.00  \n",
       "2     0  0.00  \n",
       "3     0  0.00  \n",
       "4     0  0.00  \n",
       "..   ..   ...  \n",
       "195  13  0.41  \n",
       "196   0  0.00  \n",
       "197   0  0.00  \n",
       "198   0  0.00  \n",
       "199   8  0.26  \n",
       "\n",
       "[200 rows x 17 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "url = 'http://www.espn.com/mlb/stats/pitching'\n",
    "exp = 'http://www.espn.com/mlb/stats/pitching/_/count/1/qualified/true/type/expanded/order/false'\n",
    "\n",
    "#Create column names from the table header\n",
    "#Identify header row\n",
    "page = requests.get(url)\n",
    "soup = BeautifulSoup(page.text, 'html.parser')\n",
    "header_base = soup.find('tr', attrs={'class':'colhead'})\n",
    "\n",
    "page_exp = requests.get(exp)\n",
    "soup_exp = BeautifulSoup(page_exp.text, 'html.parser')\n",
    "header_exp = soup_exp.find('tr', attrs={'class':'colhead'})\n",
    "\n",
    "#extract column names from header row\n",
    "base_columns = [col.get_text() for col in header_base.find_all('td')]\n",
    "exp_columns = [col_exp.get_text() for col_exp in header_exp.find_all('td')]\n",
    "\n",
    "#create empty dataframe with column names from the header\n",
    "#we will populate with the player stats shortly\n",
    "base_df = pd.DataFrame(columns=base_columns)\n",
    "exp_df = pd.DataFrame(columns=exp_columns)\n",
    "\n",
    "\n",
    "for i in range(1,200,40):\n",
    "    #pull in website source code\n",
    "    url_base = 'http://www.espn.com/mlb/stats/pitching/_/count/{}/qualified/false/order/false'.format(i)\n",
    "    url_exp = 'http://www.espn.com/mlb/stats/pitching/_/count/{}/qualified/false/type/expanded/order/false'.format(i)\n",
    "    \n",
    "    page_base = requests.get(url_base)\n",
    "    soup_base = BeautifulSoup(page_base.text, 'html.parser')\n",
    "    \n",
    "    page_exp = requests.get(url_exp)\n",
    "    soup_exp = BeautifulSoup(page_exp.text, 'html.parser')\n",
    "    \n",
    "    #pull in the pithcer base rows\n",
    "    pitchers_base = soup_base.find_all('tr', attrs={'class':re.compile('row player-10-')})\n",
    "    for pitcher_base in pitchers_base:\n",
    "    \n",
    "        #get base stats for each player\n",
    "        stats_base = [stat_base.get_text() for stat_base in pitcher_base.find_all('td')]\n",
    "    \n",
    "        #create a dataframe for the single player's stats\n",
    "        temp_base_df = pd.DataFrame(stats_base).transpose()\n",
    "        temp_base_df.columns = base_columns\n",
    "    \n",
    "        #join the single player's stats with the overall dataset\n",
    "        base_df = pd.concat([base_df,temp_base_df], ignore_index=True)\n",
    "        \n",
    "    #pull in the pithcer expanded rows\n",
    "    pitchers_exp = soup_exp.find_all('tr', attrs={'class':re.compile('row player-10-')})\n",
    "    for pitcher_exp in pitchers_exp:\n",
    "    \n",
    "        #get base stats for each player\n",
    "        stats_exp = [stat_exp.get_text() for stat_exp in pitcher_exp.find_all('td')]\n",
    "    \n",
    "        #create a dataframe for the single player's stats\n",
    "        temp_exp_df = pd.DataFrame(stats_exp).transpose()\n",
    "        temp_exp_df.columns = exp_columns\n",
    "    \n",
    "        #join the single player's stats with the overall dataset\n",
    "        exp_df = pd.concat([exp_df,temp_exp_df], ignore_index=True)\n",
    "    \n",
    "    \n",
    "base_df\n",
    "exp_df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['RK', 'PLAYER', 'TEAM', 'GP', 'GS', 'IP', 'H', 'R', 'ER', 'BB', 'SO',\n",
      "       'W', 'L', 'SV', 'BLSV', 'WAR', 'WHIP', 'ERA'],\n",
      "      dtype='object')\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Index(['PLAYER', 'CG', 'SHO', 'TBF', 'GF', 'SVO', 'SH', 'SF', 'HBP', 'GDP',\n",
       "       'WP', 'BK', 'QS', 'QS%'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(base_df.columns)\n",
    "exp_df = exp_df.drop(['TEAM','RK','ERA'], axis=1)\n",
    "exp_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "#merge base and expanded stats dataframes\n",
    "combined_df = base_df.merge(exp_df, left_on='PLAYER', right_on='PLAYER')\n",
    "\n",
    "combined_df[['FIRST','LAST']] = combined_df['PLAYER'].str.split(n=1, expand=True)\n",
    "\n",
    "\n",
    "\n",
    "combined_df[['PLAYER','FIRST','LAST']].to_csv(r'C:\\Users\\laine\\Documents\\test.txt', sep = ' ', index = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RK</th>\n",
       "      <th>PLAYER</th>\n",
       "      <th>TEAM</th>\n",
       "      <th>GP</th>\n",
       "      <th>GS</th>\n",
       "      <th>IP</th>\n",
       "      <th>H</th>\n",
       "      <th>R</th>\n",
       "      <th>ER</th>\n",
       "      <th>BB</th>\n",
       "      <th>...</th>\n",
       "      <th>SVO</th>\n",
       "      <th>SH</th>\n",
       "      <th>SF</th>\n",
       "      <th>HBP</th>\n",
       "      <th>GDP</th>\n",
       "      <th>WP</th>\n",
       "      <th>BK</th>\n",
       "      <th>QS</th>\n",
       "      <th>QS%</th>\n",
       "      <th>FP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Ian Kinsler</td>\n",
       "      <td>SD</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td>Russell Martin</td>\n",
       "      <td>LAD</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>14.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td>Ben Zobrist</td>\n",
       "      <td>CHC</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>51.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td></td>\n",
       "      <td>Sean Rodriguez</td>\n",
       "      <td>PHI</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td></td>\n",
       "      <td>Tommy Hunter</td>\n",
       "      <td>PHI</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>22.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>195</td>\n",
       "      <td>196</td>\n",
       "      <td>Jeff Samardzija</td>\n",
       "      <td>SF</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>181.1</td>\n",
       "      <td>152</td>\n",
       "      <td>78</td>\n",
       "      <td>71</td>\n",
       "      <td>49</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>0.41</td>\n",
       "      <td>633.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>196</td>\n",
       "      <td>197</td>\n",
       "      <td>Nick Goody</td>\n",
       "      <td>CLE</td>\n",
       "      <td>39</td>\n",
       "      <td>0</td>\n",
       "      <td>40.2</td>\n",
       "      <td>30</td>\n",
       "      <td>18</td>\n",
       "      <td>16</td>\n",
       "      <td>22</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>202.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>197</td>\n",
       "      <td></td>\n",
       "      <td>Kyle Ryan</td>\n",
       "      <td>CHC</td>\n",
       "      <td>73</td>\n",
       "      <td>0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>55</td>\n",
       "      <td>26</td>\n",
       "      <td>24</td>\n",
       "      <td>29</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>284.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>198</td>\n",
       "      <td>199</td>\n",
       "      <td>Junior Guerra</td>\n",
       "      <td>MIL</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>83.2</td>\n",
       "      <td>58</td>\n",
       "      <td>35</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>...</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>362.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>199</td>\n",
       "      <td>200</td>\n",
       "      <td>Zach Davies</td>\n",
       "      <td>MIL</td>\n",
       "      <td>31</td>\n",
       "      <td>31</td>\n",
       "      <td>159.2</td>\n",
       "      <td>155</td>\n",
       "      <td>73</td>\n",
       "      <td>63</td>\n",
       "      <td>51</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0.26</td>\n",
       "      <td>507.80</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>200 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      RK           PLAYER TEAM  GP  GS     IP    H   R  ER  BB  ...  SVO  SH  \\\n",
       "0      1      Ian Kinsler   SD   1   0    1.0    1   0   0   2  ...    0   0   \n",
       "1          Russell Martin  LAD   4   0    4.0    2   0   0   0  ...    0   0   \n",
       "2             Ben Zobrist  CHC  48   0    1.0    0   0   0   2  ...    0   0   \n",
       "3          Sean Rodriguez  PHI   2   0    1.1    0   0   0   0  ...    0   0   \n",
       "4            Tommy Hunter  PHI   5   0    5.1    2   0   0   0  ...    0   0   \n",
       "..   ...              ...  ...  ..  ..    ...  ...  ..  ..  ..  ...  ...  ..   \n",
       "195  196  Jeff Samardzija   SF  32  32  181.1  152  78  71  49  ...    0   4   \n",
       "196  197       Nick Goody  CLE  39   0   40.2   30  18  16  22  ...    0   0   \n",
       "197             Kyle Ryan  CHC  73   0   61.0   55  26  24  29  ...    2   0   \n",
       "198  199    Junior Guerra  MIL  72   0   83.2   58  35  33  36  ...   11   3   \n",
       "199  200      Zach Davies  MIL  31  31  159.2  155  73  63  51  ...    0   7   \n",
       "\n",
       "     SF  HBP  GDP  WP  BK  QS   QS%      FP  \n",
       "0     0    1    1   0   0   0  0.00    2.50  \n",
       "1     0    0    1   0   0   0  0.00   14.00  \n",
       "2     0    0    0   0   0   0  0.00   51.50  \n",
       "3     0    0    0   0   0   0  0.00    5.65  \n",
       "4     0    0    0   0   0   0  0.00   22.65  \n",
       "..   ..  ...  ...  ..  ..  ..   ...     ...  \n",
       "195   4    6   11   5   0  13  0.41  633.65  \n",
       "196   2    0    1   0   0   0  0.00  202.30  \n",
       "197   3    1    7   1   0   0  0.00  284.50  \n",
       "198   2    4    5   5   0   0  0.00  362.80  \n",
       "199   5    2   14   4   0   8  0.26  507.80  \n",
       "\n",
       "[200 rows x 32 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "conv = ['GP','GS','IP','H','R','ER','BB','SO','W','L','SV','BLSV','WAR','WHIP','ERA','CG','SHO','TBF','GF','SVO','SH','SF','HBP','GDP','WP','BK','QS','QS%']\n",
    "combined_df[conv] = combined_df[conv].apply(pd.to_numeric)\n",
    "#combined_df.IP = combined_df.IP.astype(float)\n",
    "\n",
    "#calculate fantasy points\n",
    "combined_df['FP'] = combined_df['GP'] \\\n",
    "    + (combined_df['IP']*1.5) \\\n",
    "    + (combined_df['SO']*2) \\\n",
    "    + (combined_df['QS']*3) \\\n",
    "    + (combined_df['CG']*4) \\\n",
    "    + (combined_df['SHO']) \\\n",
    "    + (combined_df['W']) \\\n",
    "    + (combined_df['SV']) \n",
    "combined_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
